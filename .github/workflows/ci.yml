name: ci

on:
  pull_request:
  push:
    branches:
    - main
  schedule:
    - cron: '0 1 * * 0'

jobs:

  build-sdk-nrf:
    # build using sdk-nrf, which includes zephyr as project.
    runs-on: ubuntu-22.04
    # the image size of ci:v0.28.6 exceeds the limits used by GitHub actions
    container:
      image: ghcr.io/zephyrproject-rtos/ci-base:v0.28.6
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: dev

      - name: Initialize workspace
        working-directory: dev
        run: |
          west init --local --mf west-sdk-nrf.yml .

      - name: Cache dependencies
        id: cache-sdk-nrf
        uses: actions/cache@v4
        with:
          path: deps
          key: cache-sdk-nrf-${{ hashFiles('dev/west-sdk-nrf.yml') }}

      - name: Update workspace
        working-directory: dev
        run: |
          west update -o=--depth=1 -n

      - name: Install SDK
        working-directory: deps/zephyr
        run: |
          west sdk install --toolchains arm-zephyr-eabi --no-hosttools

      - name: Build 'app' for the nRF52840 development kit
        working-directory: dev
        run: |
          west build --no-sysbuild --board nrf52840dk/nrf52840 app --pristine

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          # the projectBaseDir only seems to give the location of the
          # sonar-project.properties, but is not the working directory.
          projectBaseDir: dev
          args: >
            --define "sonar.cfamily.compile-commands=dev/build/compile_commands.json"

  #     - name: Upload build artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: build-artifacts
  #         path: dev/build
  #         retention-days: 1

  # sonar-analysis:
  #   runs-on: ubuntu-latest
  #   needs: build-sdk-nrf
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         path: dev

  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build-artifacts
  #         path: dev/build

  #     - name: SonarQube Scan
  #       uses: SonarSource/sonarqube-scan-action@v6
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       with:
  #         # the projectBaseDir only seems to give the location of the
  #         # sonar-project.properties, but is not the working directory.
  #         projectBaseDir: dev
  #         args: >
  #           --define "sonar.cfamily.compile-commands=dev/build/compile_commands.json"
